# -*- coding: utf-8 -*-
"""PrimeNumbers.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1EWz6n_6DkNQdeTHFP5cz8lk55TIHn8wO

Find prime numbers in a given range.

Example 1:

*INPUT:*

1,10

*OUTPUT:*

2,3,5,7

Example 2:

*INPUT:*

3,5

*OUTPUT:*

3,5
"""

def factors(N):
  f=[]
  for i in range(1,N+1):
    if N%i==0:
      f.append(i)
  return (f)

def isprime(N):
  return (factors(N)==[1,N])  #factors will return a list 'f' which is compared to [1,N] which is either true or false.

def primesinrange(a,b):
  primelist=[]
  for i in range(a,b+1):
    if isprime(i):  #if returned true append.
      primelist.append(i)
  print(primelist)

def primesupton(a):
  primelist=[]
  for in range(1,a+1):
    if isprime(i):
      primelist.append(i)
  print(primelist)

def nprimes(n):
  count=0 
  i=1
  primelist=[]  #these can also be written as:  (count,i,primelist)=(0,1,[])
  while (count!=n):
    if isprime(i):
      primelist.append(i)
      count+=1  #these can also be written as:  (count,primelist)=(count+1,primelist+[i])
      #NOTE: using concat '+' creates a new list.
    i+=1
  print(primelist)

a=int(input("Enter the first integer: "))
b=int(input("Enter the second integer: "))
primesinrange(a,b)
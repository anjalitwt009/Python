# -*- coding: utf-8 -*-
"""DynamicProg__CountSubsets_GivenSum.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1i_aVHScXZTcGkNwn2150tb7Coq_UABLF

Count of subsets sum with a Given sum
Given an array arr[] of length N and an integer X, the task is to find the number of subsets with sum equal to X.
Example:

Input: arr[] = {1, 2, 3, 3}, X = 6

Output: 3

All the possible subsets are {1, 2, 3},
{1, 2, 3} and {3, 3}
"""

def subset(wt,W,n):
  t=[[-1 for x in range(W + 1)] for x in range(n + 1)]
  for i in range(n+1):
    for j in range(W+1):
      if i==0:
        t[i][j]=0
      if j==0 and i==0:
        t[i][j]=1
  for i in range(1,n+1):
    for j in range(0,W+1):
      if wt[i-1]<=j:
        t[i][j]= t[i-1][j-wt[i-1]] + t[i-1][j]
      else:
        t[i][j]= t[i-1][j]
  print(t)
  print(t[n][W])

arr=[2,3,5,6,8,10]
n=len(arr)
subset(arr,10,n)

arr=[0,1,2]
n=len(arr)
subset(arr,0,n)

arr=[0,0,1,0]
n=len(arr)
subset(arr,0,n)
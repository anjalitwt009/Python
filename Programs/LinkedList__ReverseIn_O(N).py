# -*- coding: utf-8 -*-
"""LinkedList__ReverseIn:O(N).ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1u9VbEZRegjjoOYU0bcdPyCrsH0a1eOts

Reverse a Linked list in O(n).

Example:

*INPUT:*

N=6

Val={1,2,3,4,5,6}

*OUTPUT:*

6,5,4,3,2,1
"""

class Node:
  def __init__(self,data):
    self.data=data
    self.reference=None
class LinkedList:
  def __init__(self):
    self.head=None
  def traverse(self):
    presentNode=self.head
    if presentNode==None:
      print("Linked list is empty")
    else:
      while (presentNode):
        print("Data: ",presentNode.data)
        presentNode=presentNode.reference
  def insert_end(self,data):
    print("--------INSERTING NODE AT THE END---------")
    presentNode=self.head
    new_data=Node(data)
    if (presentNode==None):
      self.head=new_data
    else:
      while (presentNode.reference!=None):
        presentNode=presentNode.reference
      presentNode.reference=new_data
    return self.head
  def reverse(self):
    presentNode=self.head
    if presentNode==None:
      print("Linked list is empty")
    else:
      prevNode=None
      nextNode=presentNode.reference
      while (nextNode):
        presentNode.reference=prevNode
        prevNode=presentNode
        presentNode=nextNode
        nextNode=nextNode.reference
      presentNode.reference=prevNode
      self.head=presentNode

LL=LinkedList()
n1=Node(2)
n2=Node(4)
n3=Node(6)
LL.head=n1
n1.reference=n2
n2.reference=n3
LL.insert_end(10)
LL.insert_end(20)
LL.traverse()
LL.reverse()
LL.traverse()

LL1=LinkedList()
LL1.head=None
print("Enter the number of nodes: ")
N=int(input())
for i in range(N):
  print("Enter the data for Linked list: ")
  LL1.insert_end(int(input()))
print("Entered Linked List is: ")
LL1.traverse()
LL1.reverse()
print("Reversed Linked List is: ")
LL1.traverse()
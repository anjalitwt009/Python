# -*- coding: utf-8 -*-
"""HCF.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1TgY75Ilc5lNaIEIJF6VRlHWZ2uC9a-tE

Write a program to find HCF of two numbers without recursion.
"""

def hcf1(a,b):
  if a>b:
    n=b
  else:
    n=a

  for i in range(n,0,-1):
    if (a%i==0 & b%i==0):
      print("HCF of two numbers is: ",i)
      break
    else:
      i=i-1

def hcf2(a,b):
  f1=[]
  f2=[]
  f=[]

  for i in range(1,a+1):
    if((a%i)==0):
      f1.append(i)

  for i in range(1,b+1):
    if((b%i)==0):
      f2.append(i)

  for ele in f1:
    if ele in f2:
      f.append(ele)
  print(f[-1])

def hcf3(a,b):
  f=[]
  for i in range(1,min(a,b)+1):
    if((a%i)==0 & b%i==0):
      f.append(i)
  print(f[-1])

def hcf4(a,b):
  i = min(a,b)
  while i>0:
    if (a%i==0 & b%i==0):
      print(i)
      break
    else:
      i=i-1

def hcf5(a,b):
  if a<b:
    (a,b)=(b,a)
  
  if (a%b)==0:
    return b
  else:
    diff = a-b
    return (hcf5(max(b,diff), min(b,diff)))

def hcf6(a,b):
  if a<b:
    (a,b)=(b,a)
  
  while (a%b) !=0:
    diff = a-b
    (a,b)= (max(b,diff), min(b,diff)
  return n

def hcf7(a,b):
  if a<b:
    (a,b)=(b,a)
  
  if (a%b)==0:
    return b
  else:
    return (hcf7(b,a%b))

def hcf8(a,b):
  if a<b:
    (a,b)=(b,a)
  
  while (a%b) !=0:
    (a,b)= (b, a%b)
  return n

print("Enter the two integers:")
a,b= int(input().split())
hcf4(10,5)
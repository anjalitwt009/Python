# -*- coding: utf-8 -*-
"""Trees__HeightOfBT.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1c2SzuBcNHBhCDMG3k-D2LcfTg6QVJvfv

Height of Binart Tree.

Example 1:

*INPUT:*

1,2,3

*OUTPUT:*

h=2

Example 2:

*INPUT:*

2,N,1,3,N

*OUTPUT:*

h=3

Example 3:

*INPUT:*

1,2,3,N,N,4,6,N,N,7,N

*OUTPUT:*

h=4
"""

class Node:
  def __init__(self,data):
    self.left=None
    self.data=data
    self.right=None

def height(root):
  if root==None:
    return 0
  else:
    left_sub=height(root.left)
    right_sub=height(root.right)

    if left_sub>right_sub:
      return left_sub+1
    else:
      return right_sub+1

def insert_node(new_data,root_node):
  if root_node.data:
    if root_node.data>new_data:
      if root_node.left is None:
        root_node.left=Node(new_data)
      else:
        insert_node(new_data,root_node.left)
    elif new_data>root_node.data:
      if root_node.right is None:
        root_node.right = Node(new_data)
      else:
        insert_node(new_data,root_node.right)
  else:
    root_node.data=new_data

A=list(input("Enter the elements: ").split(' '))
for i in range(len(A)):
  if i==0:
    root=Node(A[i])
  elif (A[i]!='N'):
    insert_node(A[i],root)
h=height(root)
print("Height of BT: ",h)
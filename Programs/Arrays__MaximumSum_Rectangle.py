# -*- coding: utf-8 -*-
"""Arrays__MaximumSum_Rectangle.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1y94qYo8ldpMVcU27JbKt_JQ7TVuy5Va3

Find the maximum sum rectange in 2D array of size nxm.

Example:

*INPUT:*

n=4

m=5

A=

 1   2  -1  -4  -20

-8  -3   4   2    1  

 3   8  10   1    3

-4  -1   1   7   -6

*OUTPUT:*

Sum=29

matrix=

-3   4   2      

 8  10   1    

-1   1   7
"""

def sum_max(matrix,n,m):
  sum=0 #for storing max sum
  x1_new,x2_new,y1_new,y2_new=0,0,0,0 #storing the indexes
  for i in range(n):
    for j in range(m):
      for k in range(n):
        for l in range(m):
          sum_new=sum_ele(matrix,i,j,k,l)  #Find the sum of sub matrix
          #print(sum_new)
          #Recording the maximum sum along with start and end index
          if sum_new>sum:
            sum=sum_new
            x1_new=i
            x2_new=k
            y1_new=j
            y2_new=l
  printing(matrix,x1_new,y1_new,x2_new,y2_new,sum)

def sum_ele(A,x1,y1,x2,y2):
  sum=0
  for i in range(x1,x2+1):
    for j in range(y1,y2+1):
      sum=sum+A[i][j]
  return sum

def printing(A,x1,y1,x2,y2,sum):
  matrix_new=[]
  for i in range(x1,x2+1):
    B=[]
    for j in range(y1,y2+1):
      B.append(A[i][j])
    matrix_new.append(B)
  print(matrix_new)
  print("Sum:",sum)

print("Enter the array size: ")
n,m=input().split(' ')
n=int(n)
m=int(m)
print("Enter the array elements: ")
matrix=[]
for i in range(n):
  A=[]
  for j in range(m):
    A.append(int(input()))
  matrix.append(A)
print(matrix)
sum_max(matrix,n,m)
# -*- coding: utf-8 -*-
"""LinkedList__DetectLoop.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1LjG_OnHcYF2XeW5UbmQgpiyi7Otot7Wc

Dectect loop in linked list.

Example 1:

*INPUT:*

N=3

Val={1,3,4}

C=2

*OUTPUT:*

True

Example 2:

*INPUT:*

N=4

Val={1,8,3,4}

C=0

*OUTPUT:*

False
"""

class Node:
  def __init__(self,data):
    self.data=data
    self.reference=None
class LinkedList:
  def __init__(self):
    self.head=None
  def traverse(self):
    presentNode=self.head
    if presentNode==None:
      print("Linked list is empty")
    else:
      while (presentNode):
        print("Data: ",presentNode.data)
        presentNode=presentNode.reference
  def insert_end(self,data):
    print("--------INSERTING NODE AT THE END---------")
    presentNode=self.head
    new_data=Node(data)
    if (presentNode==None):
      self.head=new_data
    else:
      while (presentNode.reference!=None):
        presentNode=presentNode.reference
      presentNode.reference=new_data
  def detectLoop(self,C,N):
    presentNode=self.head
    if (presentNode==None):
      print("Linked list is already empty")
    elif (C==0):
      print("There is no loop")
    else:
      i=0
      while (i<C-1):
        i+=1
        presentNode=presentNode.reference
      lastNode=self.head
      i=0
      while (i<N-1):
        i+=1
        lastNode=lastNode.reference
      if lastNode.reference==presentNode:
        print("Loop Exist")
      else:
        print("No loop")
  def insertLoop(self,C,N):
    presentNode=self.head
    if (C==0):
      return
    else:
      i=0
      while (i<C-1):
        i+=1
        presentNode=presentNode.reference
      lastNode=self.head
      i=0
      while (i<N-1):
        i+=1
        lastNode=lastNode.reference
    lastNode.reference=presentNode
    return

LL1=LinkedList()
LL1.head=None
print("Enter the number of nodes: ")
N=int(input())
C=int(input("Enter C: "))

print("Enter the data for Linked list: ")
for i in range(N):
  LL1.insert_end(int(input()))
print("Entered Linked List is: ")

LL1.traverse()
LL1.insertLoop(C,N)
LL1.detectLoop(C,N)
#LL1.traverse() #Cannot traverse: infinite execution due to loop existence
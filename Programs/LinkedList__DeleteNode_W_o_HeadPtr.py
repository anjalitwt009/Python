# -*- coding: utf-8 -*-
"""LinkedList__DeleteNode_w/o_HeadPtr.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/16KYzN7SSXMT2w53AV6dCHHl7ObpqAmSd

Delete without head pointer. 

Given pointer or reference to the node to be deleted from linked list of N nodes. Delete the node in O(n).
"""

class Node:
  def __init__(self,data):
    self.data=data
    self.reference=None

class LinkedList:
  def __init__(self):
    self.head=None
  def deleteNode(self,node):
    nextNode=node.reference
    if node==None:
      print("Empty Linked List")
      return 0
    else:
      node.data=nextNode.data
      node.reference=nextNode.reference
  def deleteNode2(self,node):
    nextNode=node.reference
    prevNode=None
    if node==None:
      print("Empty Linked List")
      return 0
    while (nextNode):
      node.data=nextNode.data
      prevNode=node
      node=nextNode
      nextNode=nextNode.reference
    prevNode.reference=None
    node.data=None
    node.reference=None
  def traverse(self):
    presentNode=self.head
    while (presentNode):
      print(presentNode.data)
      presentNode=presentNode.reference

LL=LinkedList()
n1=Node(1)
n2=Node(2)
n3=Node(3)
n4=Node(4)
LL.head=n1
n1.reference=n2
n2.reference=n3
n3.reference=n4
LL.traverse()
LL.deleteNode2(n3)
LL.traverse()
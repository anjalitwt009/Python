# -*- coding: utf-8 -*-
"""BitManipulation__BirDifference.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/19n3Qv6r-RmuKbUu7GhhFFwA_QRuS08ua

Bit Diffderence.

Given A and B. Count the number of bits needed to be flipped while converting A to B.

Example:

*INPUT:*

10

20

*OUTPUT:*

4
"""

def bit_diff(A,B):
  x=conv_bin(A)
  y=conv_bin(B)

  while (len(x)!=len(y)):
    if len(y)<len(x):
      y.insert(0,0)
    else:
      x.insert(0,0)
  
  compare(x,y)

def compare(A,B):
  count=0
  for i in range(max(len(B),len(A))):
    if A[i]!=B[i]:
      count+=1
  print(count)

def conv_bin(N):
  bin_num=[]
  num=[]
  while (N>0):
    x=N%2
    bin_num.append(x)
    N=N//2
  for i in range(len(bin_num)-1,-1,-1):
      num.append(bin_num[i])
  return num

print("Enter the integers: ")
x=int(input())
y=int(input())
bit_diff(x,y)
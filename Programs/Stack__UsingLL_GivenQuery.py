# -*- coding: utf-8 -*-
"""Stack__UsingLL_GivenQuery.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/108-SUhFpv-Er3zV-ub-ybsj1IgKmPThB

Implement Stack using Linked List. Given querries Q.

*   1X: push 'X'
*   2: Quesries of such kind means print and pop element

Example 1:

*INPUT:*

Q=5

1 2 1 3 2 1 4 2

*OUTPUT:*

3,4

Example 2:

*INPUT:*

Q=4

2,1,4,1,5,2

*OUTPUT:*

-1,5
"""

class Node:
  def __init__(self,data):
    self.data=data
    self.reference=None

class LinkedList:
  def __init__(self):
    self.head=None
  def insert_end(self,new_data):
    presentNode=self.head
    new_node=Node(new_data)
    if (presentNode==None):
      self.head=new_node
      return 0
    while (presentNode.reference!=None):
      presentNode=presentNode.reference
    presentNode.reference=new_node
  def remove_last(self):
    presentNode=self.head
    if (presentNode==None):
      print("NO ELEMENT PRESENT")
      return -1
    elif (presentNode.reference==None):
      element=presentNode.data
      self.head=None
      return element
    else:
      while (presentNode.reference.reference):
        presentNode=presentNode.reference
      element=(presentNode.reference.data)
      presentNode.reference=None
      return element
  def traverse(self):
    presentNode=self.head
    while (presentNode):
      print(presentNode.data)
      presentNode=presentNode.reference
  def push(self,ele):
    self.insert_end(ele)
  def pop(self):
    print("--------POPPING ELEMENT-------")
    element=self.remove_last()
    print("POPPED ELEMENT: ",element)

Q=int(input("Enter the number of Queries: "))
print("Enter the Queries: ")
A=list(map(int,input().split(' ')))
i=0
LL=LinkedList()
while (i<len(A)):
  if A[i]==1:
    LL.push(A[i+1])
    i=i+2
  else:
    LL.pop()
    i+=1
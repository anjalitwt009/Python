# -*- coding: utf-8 -*-
"""Strings__LongestSubString.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Zavi-cGNc44KZkEq5V1n-FYvMC5OwfM5

Longest Palindrome in a string. In case of conflict return the first substring.

Example :

*INPUT:*

aaaabbaa

*OUTPUT:*

aabbaa
"""

def isPalindrome(A):
  if A==A[::-1]:
    return (len(A))
  else:
    return 0

def longestPalindrome(A):
  max=0
  index_S=-1
  index_E=-1
  s=''
  for i in range(len(A)):
    for j in range(i+1,len(A)+1):
      print(A[i:j])
      x=isPalindrome(A[i:j])
      if x>max:
        
        max=x
        index_S=i
        index_E=j    
  print(A[index_S:index_E])

A=input("Enter the string: ")
longestPalindrome(A)